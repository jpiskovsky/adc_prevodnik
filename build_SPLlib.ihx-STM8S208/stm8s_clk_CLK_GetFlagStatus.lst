                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_clk_CLK_GetFlagStatus
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _CLK_GetFlagStatus
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 
                                     25 ; default segment ordering for linker
                                     26 	.area HOME
                                     27 	.area GSINIT
                                     28 	.area GSFINAL
                                     29 	.area CONST
                                     30 	.area INITIALIZER
                                     31 	.area CODE
                                     32 
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area GSINIT
                                     38 	.area GSFINAL
                                     39 	.area GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area HOME
                                     44 	.area HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area CODE
                                     49 ;	../SPLSPL/src/stm8s_clk_CLK_GetFlagStatus.c: 38: FlagStatus CLK_GetFlagStatus(CLK_Flag_TypeDef CLK_FLAG)
                                     50 ; genLabel
                                     51 ;	-----------------------------------------
                                     52 ;	 function CLK_GetFlagStatus
                                     53 ;	-----------------------------------------
                                     54 ;	Register assignment might be sub-optimal.
                                     55 ;	Stack space usage: 3 bytes.
      000000                         56 _CLK_GetFlagStatus:
      000000 52 03            [ 2]   57 	sub	sp, #3
                                     58 ; genReceive
      000002 1F 02            [ 2]   59 	ldw	(0x02, sp), x
                                     60 ;	../SPLSPL/src/stm8s_clk_CLK_GetFlagStatus.c: 48: statusreg = (uint16_t)((uint16_t)CLK_FLAG & (uint16_t)0xFF00);
                                     61 ; genCast
                                     62 ; genAssign
      000004 1E 02            [ 2]   63 	ldw	x, (0x02, sp)
                                     64 ; genAnd
      000006 4F               [ 1]   65 	clr	a
                                     66 ;	../SPLSPL/src/stm8s_clk_CLK_GetFlagStatus.c: 51: if (statusreg == 0x0100) /* The flag to check is in ICKRregister */
                                     67 ; genCast
                                     68 ; genAssign
      000007 97               [ 1]   69 	ld	xl, a
                                     70 ; genCmpEQorNE
      000008 A3 01 00         [ 2]   71 	cpw	x, #0x0100
      00000B 26 03            [ 1]   72 	jrne	00154$
      00000D CCr00r13         [ 2]   73 	jp	00155$
      000010                         74 00154$:
      000010 CCr00r19         [ 2]   75 	jp	00111$
      000013                         76 00155$:
                                     77 ; skipping generated iCode
                                     78 ;	../SPLSPL/src/stm8s_clk_CLK_GetFlagStatus.c: 53: tmpreg = CLK->ICKR;
                                     79 ; genPointerGet
      000013 C6 50 C0         [ 1]   80 	ld	a, 0x50c0
                                     81 ; genGoto
      000016 CCr00r4F         [ 2]   82 	jp	00112$
                                     83 ; genLabel
      000019                         84 00111$:
                                     85 ;	../SPLSPL/src/stm8s_clk_CLK_GetFlagStatus.c: 55: else if (statusreg == 0x0200) /* The flag to check is in ECKRregister */
                                     86 ; genCmpEQorNE
      000019 A3 02 00         [ 2]   87 	cpw	x, #0x0200
      00001C 26 03            [ 1]   88 	jrne	00157$
      00001E CCr00r24         [ 2]   89 	jp	00158$
      000021                         90 00157$:
      000021 CCr00r2A         [ 2]   91 	jp	00108$
      000024                         92 00158$:
                                     93 ; skipping generated iCode
                                     94 ;	../SPLSPL/src/stm8s_clk_CLK_GetFlagStatus.c: 57: tmpreg = CLK->ECKR;
                                     95 ; genPointerGet
      000024 C6 50 C1         [ 1]   96 	ld	a, 0x50c1
                                     97 ; genGoto
      000027 CCr00r4F         [ 2]   98 	jp	00112$
                                     99 ; genLabel
      00002A                        100 00108$:
                                    101 ;	../SPLSPL/src/stm8s_clk_CLK_GetFlagStatus.c: 59: else if (statusreg == 0x0300) /* The flag to check is in SWIC register */
                                    102 ; genCmpEQorNE
      00002A A3 03 00         [ 2]  103 	cpw	x, #0x0300
      00002D 26 03            [ 1]  104 	jrne	00160$
      00002F CCr00r35         [ 2]  105 	jp	00161$
      000032                        106 00160$:
      000032 CCr00r3B         [ 2]  107 	jp	00105$
      000035                        108 00161$:
                                    109 ; skipping generated iCode
                                    110 ;	../SPLSPL/src/stm8s_clk_CLK_GetFlagStatus.c: 61: tmpreg = CLK->SWCR;
                                    111 ; genPointerGet
      000035 C6 50 C5         [ 1]  112 	ld	a, 0x50c5
                                    113 ; genGoto
      000038 CCr00r4F         [ 2]  114 	jp	00112$
                                    115 ; genLabel
      00003B                        116 00105$:
                                    117 ;	../SPLSPL/src/stm8s_clk_CLK_GetFlagStatus.c: 63: else if (statusreg == 0x0400) /* The flag to check is in CSS register */
                                    118 ; genCmpEQorNE
      00003B A3 04 00         [ 2]  119 	cpw	x, #0x0400
      00003E 26 03            [ 1]  120 	jrne	00163$
      000040 CCr00r46         [ 2]  121 	jp	00164$
      000043                        122 00163$:
      000043 CCr00r4C         [ 2]  123 	jp	00102$
      000046                        124 00164$:
                                    125 ; skipping generated iCode
                                    126 ;	../SPLSPL/src/stm8s_clk_CLK_GetFlagStatus.c: 65: tmpreg = CLK->CSSR;
                                    127 ; genPointerGet
      000046 C6 50 C8         [ 1]  128 	ld	a, 0x50c8
                                    129 ; genGoto
      000049 CCr00r4F         [ 2]  130 	jp	00112$
                                    131 ; genLabel
      00004C                        132 00102$:
                                    133 ;	../SPLSPL/src/stm8s_clk_CLK_GetFlagStatus.c: 69: tmpreg = CLK->CCOR;
                                    134 ; genPointerGet
      00004C C6 50 C9         [ 1]  135 	ld	a, 0x50c9
                                    136 ; genLabel
      00004F                        137 00112$:
                                    138 ;	../SPLSPL/src/stm8s_clk_CLK_GetFlagStatus.c: 72: if ((tmpreg & (uint8_t)CLK_FLAG) != (uint8_t)RESET)
                                    139 ; genCast
                                    140 ; genAssign
      00004F 88               [ 1]  141 	push	a
      000050 7B 04            [ 1]  142 	ld	a, (0x04, sp)
      000052 6B 02            [ 1]  143 	ld	(0x02, sp), a
      000054 84               [ 1]  144 	pop	a
                                    145 ; genAnd
      000055 14 01            [ 1]  146 	and	a, (0x01, sp)
                                    147 ; genIfx
      000057 4D               [ 1]  148 	tnz	a
      000058 26 03            [ 1]  149 	jrne	00165$
      00005A CCr00r62         [ 2]  150 	jp	00114$
      00005D                        151 00165$:
                                    152 ;	../SPLSPL/src/stm8s_clk_CLK_GetFlagStatus.c: 74: bitstatus = SET;
                                    153 ; genAssign
      00005D A6 01            [ 1]  154 	ld	a, #0x01
                                    155 ; genGoto
      00005F CCr00r63         [ 2]  156 	jp	00115$
                                    157 ; genLabel
      000062                        158 00114$:
                                    159 ;	../SPLSPL/src/stm8s_clk_CLK_GetFlagStatus.c: 78: bitstatus = RESET;
                                    160 ; genAssign
      000062 4F               [ 1]  161 	clr	a
                                    162 ; genLabel
      000063                        163 00115$:
                                    164 ;	../SPLSPL/src/stm8s_clk_CLK_GetFlagStatus.c: 82: return((FlagStatus)bitstatus);
                                    165 ; genReturn
                                    166 ; genLabel
      000063                        167 00116$:
                                    168 ;	../SPLSPL/src/stm8s_clk_CLK_GetFlagStatus.c: 83: }
                                    169 ; genEndFunction
      000063 5B 03            [ 2]  170 	addw	sp, #3
      000065 81               [ 4]  171 	ret
                                    172 	.area CODE
                                    173 	.area CONST
                                    174 	.area INITIALIZER
                                    175 	.area CABS (ABS)
