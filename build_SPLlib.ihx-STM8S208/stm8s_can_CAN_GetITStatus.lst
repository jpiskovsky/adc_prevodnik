                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_can_CAN_GetITStatus
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _CheckITStatus
                                     12 	.globl _CAN_SelectPage
                                     13 	.globl _CAN_GetSelectedPage
                                     14 	.globl _CAN_GetITStatus
                                     15 ;--------------------------------------------------------
                                     16 ; ram data
                                     17 ;--------------------------------------------------------
                                     18 	.area DATA
                                     19 ;--------------------------------------------------------
                                     20 ; ram data
                                     21 ;--------------------------------------------------------
                                     22 	.area INITIALIZED
                                     23 ;--------------------------------------------------------
                                     24 ; absolute external ram data
                                     25 ;--------------------------------------------------------
                                     26 	.area DABS (ABS)
                                     27 
                                     28 ; default segment ordering for linker
                                     29 	.area HOME
                                     30 	.area GSINIT
                                     31 	.area GSFINAL
                                     32 	.area CONST
                                     33 	.area INITIALIZER
                                     34 	.area CODE
                                     35 
                                     36 ;--------------------------------------------------------
                                     37 ; global & static initialisations
                                     38 ;--------------------------------------------------------
                                     39 	.area HOME
                                     40 	.area GSINIT
                                     41 	.area GSFINAL
                                     42 	.area GSINIT
                                     43 ;--------------------------------------------------------
                                     44 ; Home
                                     45 ;--------------------------------------------------------
                                     46 	.area HOME
                                     47 	.area HOME
                                     48 ;--------------------------------------------------------
                                     49 ; code
                                     50 ;--------------------------------------------------------
                                     51 	.area CODE
                                     52 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 37: ITStatus CAN_GetITStatus(CAN_IT_TypeDef CAN_IT)
                                     53 ; genLabel
                                     54 ;	-----------------------------------------
                                     55 ;	 function CAN_GetITStatus
                                     56 ;	-----------------------------------------
                                     57 ;	Register assignment might be sub-optimal.
                                     58 ;	Stack space usage: 1 bytes.
      000000                         59 _CAN_GetITStatus:
      000000 88               [ 1]   60 	push	a
                                     61 ; genReceive
      000001 51               [ 1]   62 	exgw	x, y
                                     63 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 40: CAN_Page_TypeDef can_page = CAN_GetSelectedPage();
                                     64 ; genCall
      000002 90 89            [ 2]   65 	pushw	y
      000004 CDr00r00         [ 4]   66 	call	_CAN_GetSelectedPage
      000007 6B 03            [ 1]   67 	ld	(0x03, sp), a
      000009 90 85            [ 2]   68 	popw	y
                                     69 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 46: switch (CAN_IT)
                                     70 ; genCast
                                     71 ; genAssign
      00000B 93               [ 1]   72 	ldw	x, y
                                     73 ; genCmpEQorNE
      00000C 5A               [ 2]   74 	decw	x
      00000D 26 03            [ 1]   75 	jrne	00286$
      00000F CCr00r66         [ 2]   76 	jp	00101$
      000012                         77 00286$:
                                     78 ; skipping generated iCode
                                     79 ; genCast
                                     80 ; genAssign
      000012 93               [ 1]   81 	ldw	x, y
                                     82 ; genCmpEQorNE
      000013 A3 00 02         [ 2]   83 	cpw	x, #0x0002
      000016 26 03            [ 1]   84 	jrne	00289$
      000018 CCr00r7E         [ 2]   85 	jp	00105$
      00001B                         86 00289$:
                                     87 ; skipping generated iCode
                                     88 ; genCast
                                     89 ; genAssign
      00001B 93               [ 1]   90 	ldw	x, y
                                     91 ; genCmpEQorNE
      00001C A3 00 04         [ 2]   92 	cpw	x, #0x0004
      00001F 26 03            [ 1]   93 	jrne	00292$
      000021 CCr00r97         [ 2]   94 	jp	00109$
      000024                         95 00292$:
                                     96 ; skipping generated iCode
                                     97 ; genCast
                                     98 ; genAssign
      000024 93               [ 1]   99 	ldw	x, y
                                    100 ; genCmpEQorNE
      000025 A3 00 08         [ 2]  101 	cpw	x, #0x0008
      000028 26 03            [ 1]  102 	jrne	00295$
      00002A CCr00rB0         [ 2]  103 	jp	00113$
      00002D                        104 00295$:
                                    105 ; skipping generated iCode
                                    106 ; genCast
                                    107 ; genAssign
      00002D 93               [ 1]  108 	ldw	x, y
                                    109 ; genCmpEQorNE
      00002E A3 00 80         [ 2]  110 	cpw	x, #0x0080
      000031 26 03            [ 1]  111 	jrne	00298$
      000033 CCr00rC9         [ 2]  112 	jp	00117$
      000036                        113 00298$:
                                    114 ; skipping generated iCode
                                    115 ; genCast
                                    116 ; genAssign
      000036 93               [ 1]  117 	ldw	x, y
                                    118 ; genCmpEQorNE
      000037 A3 01 00         [ 2]  119 	cpw	x, #0x0100
      00003A 26 03            [ 1]  120 	jrne	00301$
      00003C CCr00rFD         [ 2]  121 	jp	00125$
      00003F                        122 00301$:
                                    123 ; skipping generated iCode
                                    124 ; genCast
                                    125 ; genAssign
      00003F 93               [ 1]  126 	ldw	x, y
                                    127 ; genCmpEQorNE
      000040 A3 02 00         [ 2]  128 	cpw	x, #0x0200
      000043 26 03            [ 1]  129 	jrne	00304$
      000045 CCr01r19         [ 2]  130 	jp	00129$
      000048                        131 00304$:
                                    132 ; skipping generated iCode
                                    133 ; genCast
                                    134 ; genAssign
      000048 93               [ 1]  135 	ldw	x, y
                                    136 ; genCmpEQorNE
      000049 A3 04 00         [ 2]  137 	cpw	x, #0x0400
      00004C 26 03            [ 1]  138 	jrne	00307$
      00004E CCr01r36         [ 2]  139 	jp	00133$
      000051                        140 00307$:
                                    141 ; skipping generated iCode
                                    142 ; genCast
                                    143 ; genAssign
      000051 93               [ 1]  144 	ldw	x, y
                                    145 ; genCmpEQorNE
      000052 A3 08 00         [ 2]  146 	cpw	x, #0x0800
      000055 26 03            [ 1]  147 	jrne	00310$
      000057 CCr01r53         [ 2]  148 	jp	00137$
      00005A                        149 00310$:
                                    150 ; skipping generated iCode
                                    151 ; genCast
                                    152 ; genAssign
                                    153 ; genCmpEQorNE
      00005A 90 A3 40 00      [ 2]  154 	cpw	y, #0x4000
      00005E 26 03            [ 1]  155 	jrne	00313$
      000060 CCr00rE1         [ 2]  156 	jp	00121$
      000063                        157 00313$:
                                    158 ; skipping generated iCode
                                    159 ; genGoto
      000063 CCr01r70         [ 2]  160 	jp	00141$
                                    161 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 48: case CAN_IT_TME:
                                    162 ; genLabel
      000066                        163 00101$:
                                    164 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 49: if ((CAN->IER & CAN_IER_TMEIE) !=RESET)
                                    165 ; genPointerGet
      000066 C6 54 25         [ 1]  166 	ld	a, 0x5425
                                    167 ; genAnd
      000069 44               [ 1]  168 	srl	a
      00006A 25 03            [ 1]  169 	jrc	00315$
      00006C CCr00r7A         [ 2]  170 	jp	00103$
      00006F                        171 00315$:
                                    172 ; skipping generated iCode
                                    173 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 51: pendingbitstatus = CheckITStatus(CAN->TSR, CAN_TSR_RQCP012);
                                    174 ; genPointerGet
      00006F C6 54 22         [ 1]  175 	ld	a, 0x5422
                                    176 ; genIPush
      000072 4B 07            [ 1]  177 	push	#0x07
                                    178 ; genSend
                                    179 ; genCall
      000074 CDr00r00         [ 4]  180 	call	_CheckITStatus
                                    181 ; genGoto
      000077 CCr01r71         [ 2]  182 	jp	00142$
                                    183 ; genLabel
      00007A                        184 00103$:
                                    185 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 55: pendingbitstatus = RESET;
                                    186 ; genAssign
      00007A 4F               [ 1]  187 	clr	a
                                    188 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 57: break;
                                    189 ; genGoto
      00007B CCr01r71         [ 2]  190 	jp	00142$
                                    191 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 59: case CAN_IT_FMP:
                                    192 ; genLabel
      00007E                        193 00105$:
                                    194 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 60: if ((CAN->IER & CAN_IER_FMPIE) !=RESET)
                                    195 ; genPointerGet
      00007E C6 54 25         [ 1]  196 	ld	a, 0x5425
                                    197 ; genAnd
      000081 A5 02            [ 1]  198 	bcp	a, #0x02
      000083 26 03            [ 1]  199 	jrne	00316$
      000085 CCr00r93         [ 2]  200 	jp	00107$
      000088                        201 00316$:
                                    202 ; skipping generated iCode
                                    203 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 62: pendingbitstatus = CheckITStatus(CAN->RFR, CAN_RFR_FMP01);
                                    204 ; genPointerGet
      000088 C6 54 24         [ 1]  205 	ld	a, 0x5424
                                    206 ; genIPush
      00008B 4B 03            [ 1]  207 	push	#0x03
                                    208 ; genSend
                                    209 ; genCall
      00008D CDr00r00         [ 4]  210 	call	_CheckITStatus
                                    211 ; genGoto
      000090 CCr01r71         [ 2]  212 	jp	00142$
                                    213 ; genLabel
      000093                        214 00107$:
                                    215 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 66: pendingbitstatus = RESET;
                                    216 ; genAssign
      000093 4F               [ 1]  217 	clr	a
                                    218 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 68: break;
                                    219 ; genGoto
      000094 CCr01r71         [ 2]  220 	jp	00142$
                                    221 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 69: case CAN_IT_FF:
                                    222 ; genLabel
      000097                        223 00109$:
                                    224 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 70: if ((CAN->IER & CAN_IER_FFIE) !=RESET)
                                    225 ; genPointerGet
      000097 C6 54 25         [ 1]  226 	ld	a, 0x5425
                                    227 ; genAnd
      00009A A5 04            [ 1]  228 	bcp	a, #0x04
      00009C 26 03            [ 1]  229 	jrne	00317$
      00009E CCr00rAC         [ 2]  230 	jp	00111$
      0000A1                        231 00317$:
                                    232 ; skipping generated iCode
                                    233 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 72: pendingbitstatus = CheckITStatus(CAN->RFR, CAN_RFR_FULL);
                                    234 ; genPointerGet
      0000A1 C6 54 24         [ 1]  235 	ld	a, 0x5424
                                    236 ; genIPush
      0000A4 4B 08            [ 1]  237 	push	#0x08
                                    238 ; genSend
                                    239 ; genCall
      0000A6 CDr00r00         [ 4]  240 	call	_CheckITStatus
                                    241 ; genGoto
      0000A9 CCr01r71         [ 2]  242 	jp	00142$
                                    243 ; genLabel
      0000AC                        244 00111$:
                                    245 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 76: pendingbitstatus = RESET;
                                    246 ; genAssign
      0000AC 4F               [ 1]  247 	clr	a
                                    248 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 78: break;
                                    249 ; genGoto
      0000AD CCr01r71         [ 2]  250 	jp	00142$
                                    251 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 79: case CAN_IT_FOV:
                                    252 ; genLabel
      0000B0                        253 00113$:
                                    254 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 80: if ((CAN->IER & CAN_IER_FOVIE) !=RESET)
                                    255 ; genPointerGet
      0000B0 C6 54 25         [ 1]  256 	ld	a, 0x5425
                                    257 ; genAnd
      0000B3 A5 08            [ 1]  258 	bcp	a, #0x08
      0000B5 26 03            [ 1]  259 	jrne	00318$
      0000B7 CCr00rC5         [ 2]  260 	jp	00115$
      0000BA                        261 00318$:
                                    262 ; skipping generated iCode
                                    263 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 82: pendingbitstatus = CheckITStatus(CAN->RFR, CAN_RFR_FOVR);
                                    264 ; genPointerGet
      0000BA C6 54 24         [ 1]  265 	ld	a, 0x5424
                                    266 ; genIPush
      0000BD 4B 10            [ 1]  267 	push	#0x10
                                    268 ; genSend
                                    269 ; genCall
      0000BF CDr00r00         [ 4]  270 	call	_CheckITStatus
                                    271 ; genGoto
      0000C2 CCr01r71         [ 2]  272 	jp	00142$
                                    273 ; genLabel
      0000C5                        274 00115$:
                                    275 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 86: pendingbitstatus = RESET;
                                    276 ; genAssign
      0000C5 4F               [ 1]  277 	clr	a
                                    278 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 88: break;
                                    279 ; genGoto
      0000C6 CCr01r71         [ 2]  280 	jp	00142$
                                    281 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 89: case CAN_IT_WKU:
                                    282 ; genLabel
      0000C9                        283 00117$:
                                    284 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 90: if ((CAN->IER & CAN_IER_WKUIE) !=RESET)
                                    285 ; genPointerGet
      0000C9 C6 54 25         [ 1]  286 	ld	a, 0x5425
                                    287 ; genAnd
      0000CC 4D               [ 1]  288 	tnz	a
      0000CD 2B 03            [ 1]  289 	jrmi	00319$
      0000CF CCr00rDD         [ 2]  290 	jp	00119$
      0000D2                        291 00319$:
                                    292 ; skipping generated iCode
                                    293 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 92: pendingbitstatus = CheckITStatus(CAN->MSR, CAN_MSR_WKUI);
                                    294 ; genPointerGet
      0000D2 C6 54 21         [ 1]  295 	ld	a, 0x5421
                                    296 ; genIPush
      0000D5 4B 08            [ 1]  297 	push	#0x08
                                    298 ; genSend
                                    299 ; genCall
      0000D7 CDr00r00         [ 4]  300 	call	_CheckITStatus
                                    301 ; genGoto
      0000DA CCr01r71         [ 2]  302 	jp	00142$
                                    303 ; genLabel
      0000DD                        304 00119$:
                                    305 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 96: pendingbitstatus = RESET;
                                    306 ; genAssign
      0000DD 4F               [ 1]  307 	clr	a
                                    308 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 98: break;
                                    309 ; genGoto
      0000DE CCr01r71         [ 2]  310 	jp	00142$
                                    311 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 100: case CAN_IT_ERR:
                                    312 ; genLabel
      0000E1                        313 00121$:
                                    314 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 101: CAN->PSR = CAN_Page_Config;
                                    315 ; genPointerSet
      0000E1 35 06 54 27      [ 1]  316 	mov	0x5427+0, #0x06
                                    317 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 102: if ((CAN->Page.Config.EIER & CAN_EIER_ERRIE) !=RESET)
                                    318 ; genPointerGet
      0000E5 C6 54 29         [ 1]  319 	ld	a, 0x5429
                                    320 ; genAnd
      0000E8 4D               [ 1]  321 	tnz	a
      0000E9 2B 03            [ 1]  322 	jrmi	00320$
      0000EB CCr00rF9         [ 2]  323 	jp	00123$
      0000EE                        324 00320$:
                                    325 ; skipping generated iCode
                                    326 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 104: pendingbitstatus = CheckITStatus(CAN->Page.Config.ESR, CAN_ESR_EWGF|CAN_ESR_EPVF|CAN_ESR_BOFF|CAN_ESR_LEC);
                                    327 ; genPointerGet
      0000EE C6 54 28         [ 1]  328 	ld	a, 0x5428
                                    329 ; genIPush
      0000F1 4B 77            [ 1]  330 	push	#0x77
                                    331 ; genSend
                                    332 ; genCall
      0000F3 CDr00r00         [ 4]  333 	call	_CheckITStatus
                                    334 ; genGoto
      0000F6 CCr01r71         [ 2]  335 	jp	00142$
                                    336 ; genLabel
      0000F9                        337 00123$:
                                    338 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 108: pendingbitstatus = RESET;
                                    339 ; genAssign
      0000F9 4F               [ 1]  340 	clr	a
                                    341 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 110: break;
                                    342 ; genGoto
      0000FA CCr01r71         [ 2]  343 	jp	00142$
                                    344 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 112: case CAN_IT_EWG:
                                    345 ; genLabel
      0000FD                        346 00125$:
                                    347 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 113: CAN->PSR = CAN_Page_Config;
                                    348 ; genPointerSet
      0000FD 35 06 54 27      [ 1]  349 	mov	0x5427+0, #0x06
                                    350 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 114: if ((CAN->Page.Config.EIER & CAN_EIER_EWGIE) !=RESET)
                                    351 ; genPointerGet
      000101 C6 54 29         [ 1]  352 	ld	a, 0x5429
                                    353 ; genAnd
      000104 44               [ 1]  354 	srl	a
      000105 25 03            [ 1]  355 	jrc	00321$
      000107 CCr01r15         [ 2]  356 	jp	00127$
      00010A                        357 00321$:
                                    358 ; skipping generated iCode
                                    359 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 116: pendingbitstatus = CheckITStatus(CAN->Page.Config.ESR, CAN_ESR_EWGF);
                                    360 ; genPointerGet
      00010A C6 54 28         [ 1]  361 	ld	a, 0x5428
                                    362 ; genIPush
      00010D 4B 01            [ 1]  363 	push	#0x01
                                    364 ; genSend
                                    365 ; genCall
      00010F CDr00r00         [ 4]  366 	call	_CheckITStatus
                                    367 ; genGoto
      000112 CCr01r71         [ 2]  368 	jp	00142$
                                    369 ; genLabel
      000115                        370 00127$:
                                    371 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 120: pendingbitstatus = RESET;
                                    372 ; genAssign
      000115 4F               [ 1]  373 	clr	a
                                    374 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 122: break;
                                    375 ; genGoto
      000116 CCr01r71         [ 2]  376 	jp	00142$
                                    377 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 124: case CAN_IT_EPV:
                                    378 ; genLabel
      000119                        379 00129$:
                                    380 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 125: CAN->PSR = CAN_Page_Config;
                                    381 ; genPointerSet
      000119 35 06 54 27      [ 1]  382 	mov	0x5427+0, #0x06
                                    383 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 126: if ((CAN->Page.Config.EIER & CAN_EIER_EPVIE) !=RESET)
                                    384 ; genPointerGet
      00011D C6 54 29         [ 1]  385 	ld	a, 0x5429
                                    386 ; genAnd
      000120 A5 02            [ 1]  387 	bcp	a, #0x02
      000122 26 03            [ 1]  388 	jrne	00322$
      000124 CCr01r32         [ 2]  389 	jp	00131$
      000127                        390 00322$:
                                    391 ; skipping generated iCode
                                    392 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 128: pendingbitstatus = CheckITStatus(CAN->Page.Config.ESR, CAN_ESR_EPVF);
                                    393 ; genPointerGet
      000127 C6 54 28         [ 1]  394 	ld	a, 0x5428
                                    395 ; genIPush
      00012A 4B 02            [ 1]  396 	push	#0x02
                                    397 ; genSend
                                    398 ; genCall
      00012C CDr00r00         [ 4]  399 	call	_CheckITStatus
                                    400 ; genGoto
      00012F CCr01r71         [ 2]  401 	jp	00142$
                                    402 ; genLabel
      000132                        403 00131$:
                                    404 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 132: pendingbitstatus = RESET;
                                    405 ; genAssign
      000132 4F               [ 1]  406 	clr	a
                                    407 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 134: break;
                                    408 ; genGoto
      000133 CCr01r71         [ 2]  409 	jp	00142$
                                    410 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 135: case CAN_IT_BOF:
                                    411 ; genLabel
      000136                        412 00133$:
                                    413 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 136: CAN->PSR = CAN_Page_Config;
                                    414 ; genPointerSet
      000136 35 06 54 27      [ 1]  415 	mov	0x5427+0, #0x06
                                    416 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 137: if ((CAN->Page.Config.EIER & CAN_EIER_BOFIE) !=RESET)
                                    417 ; genPointerGet
      00013A C6 54 29         [ 1]  418 	ld	a, 0x5429
                                    419 ; genAnd
      00013D A5 04            [ 1]  420 	bcp	a, #0x04
      00013F 26 03            [ 1]  421 	jrne	00323$
      000141 CCr01r4F         [ 2]  422 	jp	00135$
      000144                        423 00323$:
                                    424 ; skipping generated iCode
                                    425 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 139: pendingbitstatus = CheckITStatus(CAN->Page.Config.ESR, CAN_ESR_BOFF);
                                    426 ; genPointerGet
      000144 C6 54 28         [ 1]  427 	ld	a, 0x5428
                                    428 ; genIPush
      000147 4B 04            [ 1]  429 	push	#0x04
                                    430 ; genSend
                                    431 ; genCall
      000149 CDr00r00         [ 4]  432 	call	_CheckITStatus
                                    433 ; genGoto
      00014C CCr01r71         [ 2]  434 	jp	00142$
                                    435 ; genLabel
      00014F                        436 00135$:
                                    437 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 143: pendingbitstatus = RESET;
                                    438 ; genAssign
      00014F 4F               [ 1]  439 	clr	a
                                    440 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 145: break;
                                    441 ; genGoto
      000150 CCr01r71         [ 2]  442 	jp	00142$
                                    443 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 146: case CAN_IT_LEC:
                                    444 ; genLabel
      000153                        445 00137$:
                                    446 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 147: CAN->PSR = CAN_Page_Config;
                                    447 ; genPointerSet
      000153 35 06 54 27      [ 1]  448 	mov	0x5427+0, #0x06
                                    449 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 148: if ((CAN->Page.Config.EIER & CAN_EIER_LECIE) !=RESET)
                                    450 ; genPointerGet
      000157 C6 54 29         [ 1]  451 	ld	a, 0x5429
                                    452 ; genAnd
      00015A A5 10            [ 1]  453 	bcp	a, #0x10
      00015C 26 03            [ 1]  454 	jrne	00324$
      00015E CCr01r6C         [ 2]  455 	jp	00139$
      000161                        456 00324$:
                                    457 ; skipping generated iCode
                                    458 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 150: pendingbitstatus = CheckITStatus(CAN->Page.Config.ESR, CAN_ESR_LEC);
                                    459 ; genPointerGet
      000161 C6 54 28         [ 1]  460 	ld	a, 0x5428
                                    461 ; genIPush
      000164 4B 70            [ 1]  462 	push	#0x70
                                    463 ; genSend
                                    464 ; genCall
      000166 CDr00r00         [ 4]  465 	call	_CheckITStatus
                                    466 ; genGoto
      000169 CCr01r71         [ 2]  467 	jp	00142$
                                    468 ; genLabel
      00016C                        469 00139$:
                                    470 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 154: pendingbitstatus = RESET;
                                    471 ; genAssign
      00016C 4F               [ 1]  472 	clr	a
                                    473 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 156: break;
                                    474 ; genGoto
      00016D CCr01r71         [ 2]  475 	jp	00142$
                                    476 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 157: default :
                                    477 ; genLabel
      000170                        478 00141$:
                                    479 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 158: pendingbitstatus = RESET;
                                    480 ; genAssign
      000170 4F               [ 1]  481 	clr	a
                                    482 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 160: }
                                    483 ; genLabel
      000171                        484 00142$:
                                    485 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 162: CAN_SelectPage(can_page);
                                    486 ; genSend
      000171 88               [ 1]  487 	push	a
      000172 7B 02            [ 1]  488 	ld	a, (0x02, sp)
                                    489 ; genCall
      000174 CDr00r00         [ 4]  490 	call	_CAN_SelectPage
      000177 84               [ 1]  491 	pop	a
                                    492 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 164: return  (ITStatus)pendingbitstatus;
                                    493 ; genReturn
                                    494 ; genLabel
      000178                        495 00143$:
                                    496 ;	../SPLSPL/src/stm8s_can_CAN_GetITStatus.c: 165: }
                                    497 ; genEndFunction
      000178 5B 01            [ 2]  498 	addw	sp, #1
      00017A 81               [ 4]  499 	ret
                                    500 	.area CODE
                                    501 	.area CONST
                                    502 	.area INITIALIZER
                                    503 	.area CABS (ABS)
