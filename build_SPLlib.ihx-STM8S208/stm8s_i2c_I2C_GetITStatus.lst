                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_i2c_I2C_GetITStatus
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _I2C_GetITStatus
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 
                                     25 ; default segment ordering for linker
                                     26 	.area HOME
                                     27 	.area GSINIT
                                     28 	.area GSFINAL
                                     29 	.area CONST
                                     30 	.area INITIALIZER
                                     31 	.area CODE
                                     32 
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area GSINIT
                                     38 	.area GSFINAL
                                     39 	.area GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area HOME
                                     44 	.area HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area CODE
                                     49 ;	../SPLSPL/src/stm8s_i2c_I2C_GetITStatus.c: 52: ITStatus I2C_GetITStatus(I2C_ITPendingBit_TypeDef I2C_ITPendingBit)
                                     50 ; genLabel
                                     51 ;	-----------------------------------------
                                     52 ;	 function I2C_GetITStatus
                                     53 ;	-----------------------------------------
                                     54 ;	Register assignment might be sub-optimal.
                                     55 ;	Stack space usage: 3 bytes.
      000000                         56 _I2C_GetITStatus:
      000000 52 03            [ 2]   57 	sub	sp, #3
                                     58 ; genReceive
      000002 51               [ 1]   59 	exgw	x, y
                                     60 ;	../SPLSPL/src/stm8s_i2c_I2C_GetITStatus.c: 55: __IO uint8_t enablestatus = 0;
                                     61 ; genAssign
      000003 0F 01            [ 1]   62 	clr	(0x01, sp)
                                     63 ;	../SPLSPL/src/stm8s_i2c_I2C_GetITStatus.c: 61: tempregister = (uint8_t)( ((uint16_t)((uint16_t)I2C_ITPendingBit & ITEN_Mask)) >> 8);
                                     64 ; genCast
                                     65 ; genAssign
      000005 93               [ 1]   66 	ldw	x, y
                                     67 ; genAnd
      000006 0F 03            [ 1]   68 	clr	(0x03, sp)
      000008 9E               [ 1]   69 	ld	a, xh
      000009 A4 07            [ 1]   70 	and	a, #0x07
                                     71 ; genGetByte
                                     72 ; genCast
                                     73 ; genAssign
      00000B 6B 02            [ 1]   74 	ld	(0x02, sp), a
                                     75 ;	../SPLSPL/src/stm8s_i2c_I2C_GetITStatus.c: 64: enablestatus = (uint8_t)(I2C->ITR & ( uint8_t)tempregister);
                                     76 ; genPointerGet
      00000D C6 52 1A         [ 1]   77 	ld	a, 0x521a
      000010 6B 03            [ 1]   78 	ld	(0x03, sp), a
                                     79 ; genCast
                                     80 ; genAssign
      000012 7B 02            [ 1]   81 	ld	a, (0x02, sp)
                                     82 ; genAnd
      000014 14 03            [ 1]   83 	and	a, (0x03, sp)
                                     84 ; genAssign
      000016 6B 01            [ 1]   85 	ld	(0x01, sp), a
                                     86 ;	../SPLSPL/src/stm8s_i2c_I2C_GetITStatus.c: 66: if ((uint16_t)((uint16_t)I2C_ITPendingBit & REGISTER_Mask) == REGISTER_SR1_Index)
                                     87 ; genAnd
      000018 4F               [ 1]   88 	clr	a
      000019 97               [ 1]   89 	ld	xl, a
      00001A 9E               [ 1]   90 	ld	a, xh
      00001B A4 30            [ 1]   91 	and	a, #0x30
                                     92 ;	../SPLSPL/src/stm8s_i2c_I2C_GetITStatus.c: 69: if (((I2C->SR1 & (uint8_t)I2C_ITPendingBit) != RESET) && enablestatus)
                                     93 ; genCast
                                     94 ; genAssign
      00001D 61               [ 1]   95 	exg	a, yl
      00001E 6B 03            [ 1]   96 	ld	(0x03, sp), a
      000020 61               [ 1]   97 	exg	a, yl
                                     98 ;	../SPLSPL/src/stm8s_i2c_I2C_GetITStatus.c: 66: if ((uint16_t)((uint16_t)I2C_ITPendingBit & REGISTER_Mask) == REGISTER_SR1_Index)
                                     99 ; genCmpEQorNE
      000021 95               [ 1]  100 	ld	xh, a
      000022 A3 01 00         [ 2]  101 	cpw	x, #0x0100
      000025 26 03            [ 1]  102 	jrne	00150$
      000027 CCr00r2D         [ 2]  103 	jp	00151$
      00002A                        104 00150$:
      00002A CCr00r48         [ 2]  105 	jp	00110$
      00002D                        106 00151$:
                                    107 ; skipping generated iCode
                                    108 ;	../SPLSPL/src/stm8s_i2c_I2C_GetITStatus.c: 69: if (((I2C->SR1 & (uint8_t)I2C_ITPendingBit) != RESET) && enablestatus)
                                    109 ; genPointerGet
      00002D C6 52 17         [ 1]  110 	ld	a, 0x5217
                                    111 ; genAnd
      000030 14 03            [ 1]  112 	and	a, (0x03, sp)
                                    113 ; genIfx
      000032 4D               [ 1]  114 	tnz	a
      000033 26 03            [ 1]  115 	jrne	00152$
      000035 CCr00r44         [ 2]  116 	jp	00102$
      000038                        117 00152$:
                                    118 ; genIfx
      000038 0D 01            [ 1]  119 	tnz	(0x01, sp)
      00003A 26 03            [ 1]  120 	jrne	00153$
      00003C CCr00r44         [ 2]  121 	jp	00102$
      00003F                        122 00153$:
                                    123 ;	../SPLSPL/src/stm8s_i2c_I2C_GetITStatus.c: 72: bitstatus = SET;
                                    124 ; genAssign
      00003F A6 01            [ 1]  125 	ld	a, #0x01
                                    126 ; genGoto
      000041 CCr00r60         [ 2]  127 	jp	00111$
                                    128 ; genLabel
      000044                        129 00102$:
                                    130 ;	../SPLSPL/src/stm8s_i2c_I2C_GetITStatus.c: 77: bitstatus = RESET;
                                    131 ; genAssign
      000044 4F               [ 1]  132 	clr	a
                                    133 ; genGoto
      000045 CCr00r60         [ 2]  134 	jp	00111$
                                    135 ; genLabel
      000048                        136 00110$:
                                    137 ;	../SPLSPL/src/stm8s_i2c_I2C_GetITStatus.c: 83: if (((I2C->SR2 & (uint8_t)I2C_ITPendingBit) != RESET) && enablestatus)
                                    138 ; genPointerGet
      000048 C6 52 18         [ 1]  139 	ld	a, 0x5218
                                    140 ; genAnd
      00004B 14 03            [ 1]  141 	and	a, (0x03, sp)
                                    142 ; genIfx
      00004D 4D               [ 1]  143 	tnz	a
      00004E 26 03            [ 1]  144 	jrne	00154$
      000050 CCr00r5F         [ 2]  145 	jp	00106$
      000053                        146 00154$:
                                    147 ; genIfx
      000053 0D 01            [ 1]  148 	tnz	(0x01, sp)
      000055 26 03            [ 1]  149 	jrne	00155$
      000057 CCr00r5F         [ 2]  150 	jp	00106$
      00005A                        151 00155$:
                                    152 ;	../SPLSPL/src/stm8s_i2c_I2C_GetITStatus.c: 86: bitstatus = SET;
                                    153 ; genAssign
      00005A A6 01            [ 1]  154 	ld	a, #0x01
                                    155 ; genGoto
      00005C CCr00r60         [ 2]  156 	jp	00111$
                                    157 ; genLabel
      00005F                        158 00106$:
                                    159 ;	../SPLSPL/src/stm8s_i2c_I2C_GetITStatus.c: 91: bitstatus = RESET;
                                    160 ; genAssign
      00005F 4F               [ 1]  161 	clr	a
                                    162 ; genLabel
      000060                        163 00111$:
                                    164 ;	../SPLSPL/src/stm8s_i2c_I2C_GetITStatus.c: 95: return  bitstatus;
                                    165 ; genReturn
                                    166 ; genLabel
      000060                        167 00112$:
                                    168 ;	../SPLSPL/src/stm8s_i2c_I2C_GetITStatus.c: 96: }
                                    169 ; genEndFunction
      000060 5B 03            [ 2]  170 	addw	sp, #3
      000062 81               [ 4]  171 	ret
                                    172 	.area CODE
                                    173 	.area CONST
                                    174 	.area INITIALIZER
                                    175 	.area CABS (ABS)
