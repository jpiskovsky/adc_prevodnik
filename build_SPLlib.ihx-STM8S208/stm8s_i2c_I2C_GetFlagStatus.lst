                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_i2c_I2C_GetFlagStatus
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _I2C_GetFlagStatus
                                     12 ;--------------------------------------------------------
                                     13 ; ram data
                                     14 ;--------------------------------------------------------
                                     15 	.area DATA
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area INITIALIZED
                                     20 ;--------------------------------------------------------
                                     21 ; absolute external ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DABS (ABS)
                                     24 
                                     25 ; default segment ordering for linker
                                     26 	.area HOME
                                     27 	.area GSINIT
                                     28 	.area GSFINAL
                                     29 	.area CONST
                                     30 	.area INITIALIZER
                                     31 	.area CODE
                                     32 
                                     33 ;--------------------------------------------------------
                                     34 ; global & static initialisations
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area GSINIT
                                     38 	.area GSFINAL
                                     39 	.area GSINIT
                                     40 ;--------------------------------------------------------
                                     41 ; Home
                                     42 ;--------------------------------------------------------
                                     43 	.area HOME
                                     44 	.area HOME
                                     45 ;--------------------------------------------------------
                                     46 ; code
                                     47 ;--------------------------------------------------------
                                     48 	.area CODE
                                     49 ;	../SPLSPL/src/stm8s_i2c_I2C_GetFlagStatus.c: 54: FlagStatus I2C_GetFlagStatus(I2C_Flag_TypeDef I2C_Flag)
                                     50 ; genLabel
                                     51 ;	-----------------------------------------
                                     52 ;	 function I2C_GetFlagStatus
                                     53 ;	-----------------------------------------
                                     54 ;	Register assignment might be sub-optimal.
                                     55 ;	Stack space usage: 1 bytes.
      000000                         56 _I2C_GetFlagStatus:
      000000 88               [ 1]   57 	push	a
                                     58 ; genReceive
                                     59 ;	../SPLSPL/src/stm8s_i2c_I2C_GetFlagStatus.c: 56: uint8_t tempreg = 0;
                                     60 ; genAssign
      000001 0F 01            [ 1]   61 	clr	(0x01, sp)
                                     62 ;	../SPLSPL/src/stm8s_i2c_I2C_GetFlagStatus.c: 64: regindex = (uint8_t)((uint16_t)I2C_Flag >> 8);
                                     63 ; genCast
                                     64 ; genAssign
      000003 90 93            [ 1]   65 	ldw	y, x
      000005 9E               [ 1]   66 	ld	a, xh
                                     67 ; genGetByte
                                     68 ;	../SPLSPL/src/stm8s_i2c_I2C_GetFlagStatus.c: 66: switch (regindex)
                                     69 ; genCmpEQorNE
      000006 A1 01            [ 1]   70 	cp	a, #0x01
      000008 26 03            [ 1]   71 	jrne	00140$
      00000A CCr00r1E         [ 2]   72 	jp	00101$
      00000D                         73 00140$:
                                     74 ; skipping generated iCode
                                     75 ; genCmpEQorNE
      00000D A1 02            [ 1]   76 	cp	a, #0x02
      00000F 26 03            [ 1]   77 	jrne	00143$
      000011 CCr00r26         [ 2]   78 	jp	00102$
      000014                         79 00143$:
                                     80 ; skipping generated iCode
                                     81 ; genCmpEQorNE
      000014 A1 03            [ 1]   82 	cp	a, #0x03
      000016 26 03            [ 1]   83 	jrne	00146$
      000018 CCr00r2E         [ 2]   84 	jp	00103$
      00001B                         85 00146$:
                                     86 ; skipping generated iCode
                                     87 ; genGoto
      00001B CCr00r33         [ 2]   88 	jp	00105$
                                     89 ;	../SPLSPL/src/stm8s_i2c_I2C_GetFlagStatus.c: 69: case 0x01:
                                     90 ; genLabel
      00001E                         91 00101$:
                                     92 ;	../SPLSPL/src/stm8s_i2c_I2C_GetFlagStatus.c: 70: tempreg = (uint8_t)I2C->SR1;
                                     93 ; genPointerGet
      00001E C6 52 17         [ 1]   94 	ld	a, 0x5217
      000021 6B 01            [ 1]   95 	ld	(0x01, sp), a
                                     96 ;	../SPLSPL/src/stm8s_i2c_I2C_GetFlagStatus.c: 71: break;
                                     97 ; genGoto
      000023 CCr00r33         [ 2]   98 	jp	00105$
                                     99 ;	../SPLSPL/src/stm8s_i2c_I2C_GetFlagStatus.c: 74: case 0x02:
                                    100 ; genLabel
      000026                        101 00102$:
                                    102 ;	../SPLSPL/src/stm8s_i2c_I2C_GetFlagStatus.c: 75: tempreg = (uint8_t)I2C->SR2;
                                    103 ; genPointerGet
      000026 C6 52 18         [ 1]  104 	ld	a, 0x5218
      000029 6B 01            [ 1]  105 	ld	(0x01, sp), a
                                    106 ;	../SPLSPL/src/stm8s_i2c_I2C_GetFlagStatus.c: 76: break;
                                    107 ; genGoto
      00002B CCr00r33         [ 2]  108 	jp	00105$
                                    109 ;	../SPLSPL/src/stm8s_i2c_I2C_GetFlagStatus.c: 79: case 0x03:
                                    110 ; genLabel
      00002E                        111 00103$:
                                    112 ;	../SPLSPL/src/stm8s_i2c_I2C_GetFlagStatus.c: 80: tempreg = (uint8_t)I2C->SR3;
                                    113 ; genPointerGet
      00002E C6 52 19         [ 1]  114 	ld	a, 0x5219
      000031 6B 01            [ 1]  115 	ld	(0x01, sp), a
                                    116 ;	../SPLSPL/src/stm8s_i2c_I2C_GetFlagStatus.c: 85: }
                                    117 ; genLabel
      000033                        118 00105$:
                                    119 ;	../SPLSPL/src/stm8s_i2c_I2C_GetFlagStatus.c: 88: if ((tempreg & (uint8_t)I2C_Flag ) != 0)
                                    120 ; genCast
                                    121 ; genAssign
      000033 9F               [ 1]  122 	ld	a, xl
                                    123 ; genAnd
      000034 14 01            [ 1]  124 	and	a, (0x01, sp)
                                    125 ; genIfx
      000036 4D               [ 1]  126 	tnz	a
      000037 26 03            [ 1]  127 	jrne	00148$
      000039 CCr00r41         [ 2]  128 	jp	00107$
      00003C                        129 00148$:
                                    130 ;	../SPLSPL/src/stm8s_i2c_I2C_GetFlagStatus.c: 91: bitstatus = SET;
                                    131 ; genAssign
      00003C A6 01            [ 1]  132 	ld	a, #0x01
                                    133 ; genGoto
      00003E CCr00r42         [ 2]  134 	jp	00108$
                                    135 ; genLabel
      000041                        136 00107$:
                                    137 ;	../SPLSPL/src/stm8s_i2c_I2C_GetFlagStatus.c: 96: bitstatus = RESET;
                                    138 ; genAssign
      000041 4F               [ 1]  139 	clr	a
                                    140 ; genLabel
      000042                        141 00108$:
                                    142 ;	../SPLSPL/src/stm8s_i2c_I2C_GetFlagStatus.c: 99: return bitstatus;
                                    143 ; genReturn
                                    144 ; genLabel
      000042                        145 00109$:
                                    146 ;	../SPLSPL/src/stm8s_i2c_I2C_GetFlagStatus.c: 100: }
                                    147 ; genEndFunction
      000042 5B 01            [ 2]  148 	addw	sp, #1
      000044 81               [ 4]  149 	ret
                                    150 	.area CODE
                                    151 	.area CONST
                                    152 	.area INITIALIZER
                                    153 	.area CABS (ABS)
